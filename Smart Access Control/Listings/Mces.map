Component: ARM Compiler 5.06 update 6 (build 750) Tool: armlink [4d35ed]

==============================================================================

Section Cross References

    startup.o(RESET) refers to startup.o(STACK) for Stack_Top
    startup.o(RESET) refers to entry.o(.ARM.Collect$$$$00000000) for __main
    assignment2.o(i.Timer1_ISR) refers to assignment2.o(.data) for x
    assignment2.o(i.board) refers to assignment2.o(i.SystemInit) for SystemInit
    assignment2.o(i.board) refers to assignment2.o(i.uart_init) for uart_init
    assignment2.o(i.board) refers to lcd.o(i.delay_ms) for delay_ms
    assignment2.o(i.board) refers to assignment2.o(.data) for rowsel
    assignment2.o(i.buzzer) refers to lcd.o(i.delay_ms) for delay_ms
    assignment2.o(i.main) refers to assignment2.o(i.SystemInit) for SystemInit
    assignment2.o(i.main) refers to assignment2.o(i.uart_init) for uart_init
    assignment2.o(i.main) refers to assignment2.o(i.RTC_Init) for RTC_Init
    assignment2.o(i.main) refers to assignment2.o(i.timer1_Init) for timer1_Init
    assignment2.o(i.main) refers to lcd.o(i.LCD_Reset) for LCD_Reset
    assignment2.o(i.main) refers to lcd.o(i.LCD_Init) for LCD_Init
    assignment2.o(i.main) refers to assignment2.o(i.RTC_SetDateTime) for RTC_SetDateTime
    assignment2.o(i.main) refers to assignment2.o(i.RTC_GetDateTime) for RTC_GetDateTime
    assignment2.o(i.main) refers to printf6.o(i.__0sprintf$6) for __2sprintf
    assignment2.o(i.main) refers to assignment2.o(i.serialPrintStr) for serialPrintStr
    assignment2.o(i.main) refers to lcd.o(i.LCD_CmdWrite) for LCD_CmdWrite
    assignment2.o(i.main) refers to lcd.o(i.LCD_DisplayString) for LCD_DisplayString
    assignment2.o(i.main) refers to assignment2.o(i.delay) for delay
    assignment2.o(i.main) refers to assignment2.o(i.board) for board
    assignment2.o(i.main) refers to strcmp.o(.text) for strcmp
    assignment2.o(i.main) refers to assignment2.o(i.stepper_motor) for stepper_motor
    assignment2.o(i.main) refers to assignment2.o(.bss) for rtc
    assignment2.o(i.runDCMotor) refers to uidiv.o(.text) for __aeabi_uidivmod
    assignment2.o(i.serialPrint) refers to printf6.o(i.__0sprintf$6) for __2sprintf
    assignment2.o(i.seven_seg) refers to assignment2.o(i.SystemInit) for SystemInit
    assignment2.o(i.seven_seg) refers to assignment2.o(i.getAlphaCode) for getAlphaCode
    assignment2.o(i.seven_seg) refers to lcd.o(i.delay_ms) for delay_ms
    assignment2.o(i.stepper_motor) refers to lcd.o(i.delay_ms) for delay_ms
    assignment2.o(i.timer1_Init) refers to assignment2.o(i.Timer1_ISR) for Timer1_ISR
    lcd.o(i.LCD_CmdWrite) refers to lcd.o(i.LCD_SendHigherNibble) for LCD_SendHigherNibble
    lcd.o(i.LCD_CmdWrite) refers to lcd.o(i.LCD_SendCmdSignals) for LCD_SendCmdSignals
    lcd.o(i.LCD_DataWrite) refers to lcd.o(i.LCD_SendHigherNibble) for LCD_SendHigherNibble
    lcd.o(i.LCD_DataWrite) refers to lcd.o(i.LCD_SendDataSignals) for LCD_SendDataSignals
    lcd.o(i.LCD_DisplayString) refers to lcd.o(i.LCD_DataWrite) for LCD_DataWrite
    lcd.o(i.LCD_Init) refers to lcd.o(i.delay_ms) for delay_ms
    lcd.o(i.LCD_Init) refers to lcd.o(i.LCD_Reset) for LCD_Reset
    lcd.o(i.LCD_Init) refers to lcd.o(i.LCD_CmdWrite) for LCD_CmdWrite
    lcd.o(i.LCD_Reset) refers to lcd.o(i.LCD_SendHigherNibble) for LCD_SendHigherNibble
    lcd.o(i.LCD_Reset) refers to lcd.o(i.LCD_SendCmdSignals) for LCD_SendCmdSignals
    lcd.o(i.LCD_Reset) refers to lcd.o(i.delay_ms) for delay_ms
    lcd.o(i.LCD_Reset) refers to lcd.o(i.delay_us) for delay_us
    lcd.o(i.LCD_SendCmdSignals) refers to lcd.o(i.delay_us) for delay_us
    lcd.o(i.LCD_SendDataSignals) refers to lcd.o(i.delay_us) for delay_us
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry10a.o(.ARM.Collect$$$$0000000D) for __rt_final_cpp
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry11a.o(.ARM.Collect$$$$0000000F) for __rt_final_exit
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry7b.o(.ARM.Collect$$$$00000008) for _main_clock
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry8b.o(.ARM.Collect$$$$0000000A) for _main_cpp_init
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry9a.o(.ARM.Collect$$$$0000000B) for _main_init
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry5.o(.ARM.Collect$$$$00000004) for _main_scatterload
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry2.o(.ARM.Collect$$$$00000001) for _main_stk
    printfb.o(i.__0fprintf$bare) refers to printfb.o(i._printf_core) for _printf_core
    printfb.o(i.__0fprintf$bare) refers to fputc.o(i.fputc) for fputc
    printfb.o(i.__0printf$bare) refers to printfb.o(i._printf_core) for _printf_core
    printfb.o(i.__0printf$bare) refers to fputc.o(i.fputc) for fputc
    printfb.o(i.__0printf$bare) refers to stdout.o(.data) for __stdout
    printfb.o(i.__0snprintf$bare) refers to printfb.o(i._printf_core) for _printf_core
    printfb.o(i.__0snprintf$bare) refers to printfb.o(i._snputc) for _snputc
    printfb.o(i.__0sprintf$bare) refers to printfb.o(i._printf_core) for _printf_core
    printfb.o(i.__0sprintf$bare) refers to printfb.o(i._sputc) for _sputc
    printfb.o(i.__0vfprintf$bare) refers to printfb.o(i._printf_core) for _printf_core
    printfb.o(i.__0vfprintf$bare) refers to fputc.o(i.fputc) for fputc
    printfb.o(i.__0vprintf$bare) refers to printfb.o(i._printf_core) for _printf_core
    printfb.o(i.__0vprintf$bare) refers to fputc.o(i.fputc) for fputc
    printfb.o(i.__0vprintf$bare) refers to stdout.o(.data) for __stdout
    printfb.o(i.__0vsnprintf$bare) refers to printfb.o(i._printf_core) for _printf_core
    printfb.o(i.__0vsnprintf$bare) refers to printfb.o(i._snputc) for _snputc
    printfb.o(i.__0vsprintf$bare) refers to printfb.o(i._printf_core) for _printf_core
    printfb.o(i.__0vsprintf$bare) refers to printfb.o(i._sputc) for _sputc
    printfb.o(i._printf_core) refers to printfb.o(i.__ARM_common_call_via_r6) for __ARM_common_call_via_r6
    printf0.o(i.__0fprintf$0) refers to printf0.o(i._printf_core) for _printf_core
    printf0.o(i.__0fprintf$0) refers to fputc.o(i.fputc) for fputc
    printf0.o(i.__0printf$0) refers to printf0.o(i._printf_core) for _printf_core
    printf0.o(i.__0printf$0) refers to fputc.o(i.fputc) for fputc
    printf0.o(i.__0printf$0) refers to stdout.o(.data) for __stdout
    printf0.o(i.__0snprintf$0) refers to printf0.o(i._printf_core) for _printf_core
    printf0.o(i.__0snprintf$0) refers to printf0.o(i._snputc) for _snputc
    printf0.o(i.__0sprintf$0) refers to printf0.o(i._printf_core) for _printf_core
    printf0.o(i.__0sprintf$0) refers to printf0.o(i._sputc) for _sputc
    printf0.o(i.__0vfprintf$0) refers to printf0.o(i._printf_core) for _printf_core
    printf0.o(i.__0vfprintf$0) refers to fputc.o(i.fputc) for fputc
    printf0.o(i.__0vprintf$0) refers to printf0.o(i._printf_core) for _printf_core
    printf0.o(i.__0vprintf$0) refers to fputc.o(i.fputc) for fputc
    printf0.o(i.__0vprintf$0) refers to stdout.o(.data) for __stdout
    printf0.o(i.__0vsnprintf$0) refers to printf0.o(i._printf_core) for _printf_core
    printf0.o(i.__0vsnprintf$0) refers to printf0.o(i._snputc) for _snputc
    printf0.o(i.__0vsprintf$0) refers to printf0.o(i._printf_core) for _printf_core
    printf0.o(i.__0vsprintf$0) refers to printf0.o(i._sputc) for _sputc
    printf0.o(i._printf_core) refers to printfb.o(i.__ARM_common_call_via_r6) for __ARM_common_call_via_r6
    printf1.o(i.__0fprintf$1) refers to printf1.o(i._printf_core) for _printf_core
    printf1.o(i.__0fprintf$1) refers to fputc.o(i.fputc) for fputc
    printf1.o(i.__0printf$1) refers to printf1.o(i._printf_core) for _printf_core
    printf1.o(i.__0printf$1) refers to fputc.o(i.fputc) for fputc
    printf1.o(i.__0printf$1) refers to stdout.o(.data) for __stdout
    printf1.o(i.__0snprintf$1) refers to printf1.o(i._printf_core) for _printf_core
    printf1.o(i.__0snprintf$1) refers to printf1.o(i._snputc) for _snputc
    printf1.o(i.__0sprintf$1) refers to printf1.o(i._printf_core) for _printf_core
    printf1.o(i.__0sprintf$1) refers to printf1.o(i._sputc) for _sputc
    printf1.o(i.__0vfprintf$1) refers to printf1.o(i._printf_core) for _printf_core
    printf1.o(i.__0vfprintf$1) refers to fputc.o(i.fputc) for fputc
    printf1.o(i.__0vprintf$1) refers to printf1.o(i._printf_core) for _printf_core
    printf1.o(i.__0vprintf$1) refers to fputc.o(i.fputc) for fputc
    printf1.o(i.__0vprintf$1) refers to stdout.o(.data) for __stdout
    printf1.o(i.__0vsnprintf$1) refers to printf1.o(i._printf_core) for _printf_core
    printf1.o(i.__0vsnprintf$1) refers to printf1.o(i._snputc) for _snputc
    printf1.o(i.__0vsprintf$1) refers to printf1.o(i._printf_core) for _printf_core
    printf1.o(i.__0vsprintf$1) refers to printf1.o(i._sputc) for _sputc
    printf1.o(i._printf_core) refers to printf1.o(i.__ARM_common_call_via_r2) for __ARM_common_call_via_r2
    printf1.o(i._printf_core) refers to uidiv.o(.text) for __aeabi_uidivmod
    printf2.o(i.__0fprintf$2) refers to printf2.o(i._printf_core) for _printf_core
    printf2.o(i.__0fprintf$2) refers to fputc.o(i.fputc) for fputc
    printf2.o(i.__0printf$2) refers to printf2.o(i._printf_core) for _printf_core
    printf2.o(i.__0printf$2) refers to fputc.o(i.fputc) for fputc
    printf2.o(i.__0printf$2) refers to stdout.o(.data) for __stdout
    printf2.o(i.__0snprintf$2) refers to printf2.o(i._printf_core) for _printf_core
    printf2.o(i.__0snprintf$2) refers to printf2.o(i._snputc) for _snputc
    printf2.o(i.__0sprintf$2) refers to printf2.o(i._printf_core) for _printf_core
    printf2.o(i.__0sprintf$2) refers to printf2.o(i._sputc) for _sputc
    printf2.o(i.__0vfprintf$2) refers to printf2.o(i._printf_core) for _printf_core
    printf2.o(i.__0vfprintf$2) refers to fputc.o(i.fputc) for fputc
    printf2.o(i.__0vprintf$2) refers to printf2.o(i._printf_core) for _printf_core
    printf2.o(i.__0vprintf$2) refers to fputc.o(i.fputc) for fputc
    printf2.o(i.__0vprintf$2) refers to stdout.o(.data) for __stdout
    printf2.o(i.__0vsnprintf$2) refers to printf2.o(i._printf_core) for _printf_core
    printf2.o(i.__0vsnprintf$2) refers to printf2.o(i._snputc) for _snputc
    printf2.o(i.__0vsprintf$2) refers to printf2.o(i._printf_core) for _printf_core
    printf2.o(i.__0vsprintf$2) refers to printf2.o(i._sputc) for _sputc
    printf2.o(i._printf_core) refers to printf1.o(i.__ARM_common_call_via_r2) for __ARM_common_call_via_r2
    printf3.o(i.__0fprintf$3) refers to printf3.o(i._printf_core) for _printf_core
    printf3.o(i.__0fprintf$3) refers to fputc.o(i.fputc) for fputc
    printf3.o(i.__0printf$3) refers to printf3.o(i._printf_core) for _printf_core
    printf3.o(i.__0printf$3) refers to fputc.o(i.fputc) for fputc
    printf3.o(i.__0printf$3) refers to stdout.o(.data) for __stdout
    printf3.o(i.__0snprintf$3) refers to printf3.o(i._printf_core) for _printf_core
    printf3.o(i.__0snprintf$3) refers to printf3.o(i._snputc) for _snputc
    printf3.o(i.__0sprintf$3) refers to printf3.o(i._printf_core) for _printf_core
    printf3.o(i.__0sprintf$3) refers to printf3.o(i._sputc) for _sputc
    printf3.o(i.__0vfprintf$3) refers to printf3.o(i._printf_core) for _printf_core
    printf3.o(i.__0vfprintf$3) refers to fputc.o(i.fputc) for fputc
    printf3.o(i.__0vprintf$3) refers to printf3.o(i._printf_core) for _printf_core
    printf3.o(i.__0vprintf$3) refers to fputc.o(i.fputc) for fputc
    printf3.o(i.__0vprintf$3) refers to stdout.o(.data) for __stdout
    printf3.o(i.__0vsnprintf$3) refers to printf3.o(i._printf_core) for _printf_core
    printf3.o(i.__0vsnprintf$3) refers to printf3.o(i._snputc) for _snputc
    printf3.o(i.__0vsprintf$3) refers to printf3.o(i._printf_core) for _printf_core
    printf3.o(i.__0vsprintf$3) refers to printf3.o(i._sputc) for _sputc
    printf3.o(i._printf_core) refers to printf1.o(i.__ARM_common_call_via_r2) for __ARM_common_call_via_r2
    printf3.o(i._printf_core) refers to uidiv.o(.text) for __aeabi_uidivmod
    printf4.o(i.__0fprintf$4) refers to printf4.o(i._printf_core) for _printf_core
    printf4.o(i.__0fprintf$4) refers to fputc.o(i.fputc) for fputc
    printf4.o(i.__0printf$4) refers to printf4.o(i._printf_core) for _printf_core
    printf4.o(i.__0printf$4) refers to fputc.o(i.fputc) for fputc
    printf4.o(i.__0printf$4) refers to stdout.o(.data) for __stdout
    printf4.o(i.__0snprintf$4) refers to printf4.o(i._printf_core) for _printf_core
    printf4.o(i.__0snprintf$4) refers to printf4.o(i._snputc) for _snputc
    printf4.o(i.__0sprintf$4) refers to printf4.o(i._printf_core) for _printf_core
    printf4.o(i.__0sprintf$4) refers to printf4.o(i._sputc) for _sputc
    printf4.o(i.__0vfprintf$4) refers to printf4.o(i._printf_core) for _printf_core
    printf4.o(i.__0vfprintf$4) refers to fputc.o(i.fputc) for fputc
    printf4.o(i.__0vprintf$4) refers to printf4.o(i._printf_core) for _printf_core
    printf4.o(i.__0vprintf$4) refers to fputc.o(i.fputc) for fputc
    printf4.o(i.__0vprintf$4) refers to stdout.o(.data) for __stdout
    printf4.o(i.__0vsnprintf$4) refers to printf4.o(i._printf_core) for _printf_core
    printf4.o(i.__0vsnprintf$4) refers to printf4.o(i._snputc) for _snputc
    printf4.o(i.__0vsprintf$4) refers to printf4.o(i._printf_core) for _printf_core
    printf4.o(i.__0vsprintf$4) refers to printf4.o(i._sputc) for _sputc
    printf4.o(i._printf_core) refers to printf1.o(i.__ARM_common_call_via_r2) for __ARM_common_call_via_r2
    printf4.o(i._printf_core) refers to uldiv.o(.text) for __aeabi_uldivmod
    printf5.o(i.__0fprintf$5) refers to printf5.o(i._printf_core) for _printf_core
    printf5.o(i.__0fprintf$5) refers to fputc.o(i.fputc) for fputc
    printf5.o(i.__0printf$5) refers to printf5.o(i._printf_core) for _printf_core
    printf5.o(i.__0printf$5) refers to fputc.o(i.fputc) for fputc
    printf5.o(i.__0printf$5) refers to stdout.o(.data) for __stdout
    printf5.o(i.__0snprintf$5) refers to printf5.o(i._printf_core) for _printf_core
    printf5.o(i.__0snprintf$5) refers to printf5.o(i._snputc) for _snputc
    printf5.o(i.__0sprintf$5) refers to printf5.o(i._printf_core) for _printf_core
    printf5.o(i.__0sprintf$5) refers to printf5.o(i._sputc) for _sputc
    printf5.o(i.__0vfprintf$5) refers to printf5.o(i._printf_core) for _printf_core
    printf5.o(i.__0vfprintf$5) refers to fputc.o(i.fputc) for fputc
    printf5.o(i.__0vprintf$5) refers to printf5.o(i._printf_core) for _printf_core
    printf5.o(i.__0vprintf$5) refers to fputc.o(i.fputc) for fputc
    printf5.o(i.__0vprintf$5) refers to stdout.o(.data) for __stdout
    printf5.o(i.__0vsnprintf$5) refers to printf5.o(i._printf_core) for _printf_core
    printf5.o(i.__0vsnprintf$5) refers to printf5.o(i._snputc) for _snputc
    printf5.o(i.__0vsprintf$5) refers to printf5.o(i._printf_core) for _printf_core
    printf5.o(i.__0vsprintf$5) refers to printf5.o(i._sputc) for _sputc
    printf5.o(i._printf_core) refers to printf1.o(i.__ARM_common_call_via_r2) for __ARM_common_call_via_r2
    printf5.o(i._printf_core) refers to uldiv.o(.text) for __aeabi_uldivmod
    printf6.o(i.__0fprintf$6) refers to printf6.o(i._printf_core) for _printf_core
    printf6.o(i.__0fprintf$6) refers to fputc.o(i.fputc) for fputc
    printf6.o(i.__0printf$6) refers to printf6.o(i._printf_core) for _printf_core
    printf6.o(i.__0printf$6) refers to fputc.o(i.fputc) for fputc
    printf6.o(i.__0printf$6) refers to stdout.o(.data) for __stdout
    printf6.o(i.__0snprintf$6) refers to printf6.o(i._printf_core) for _printf_core
    printf6.o(i.__0snprintf$6) refers to printf6.o(i._snputc) for _snputc
    printf6.o(i.__0sprintf$6) refers to printf6.o(i._printf_core) for _printf_core
    printf6.o(i.__0sprintf$6) refers to printf6.o(i._sputc) for _sputc
    printf6.o(i.__0vfprintf$6) refers to printf6.o(i._printf_core) for _printf_core
    printf6.o(i.__0vfprintf$6) refers to fputc.o(i.fputc) for fputc
    printf6.o(i.__0vprintf$6) refers to printf6.o(i._printf_core) for _printf_core
    printf6.o(i.__0vprintf$6) refers to fputc.o(i.fputc) for fputc
    printf6.o(i.__0vprintf$6) refers to stdout.o(.data) for __stdout
    printf6.o(i.__0vsnprintf$6) refers to printf6.o(i._printf_core) for _printf_core
    printf6.o(i.__0vsnprintf$6) refers to printf6.o(i._snputc) for _snputc
    printf6.o(i.__0vsprintf$6) refers to printf6.o(i._printf_core) for _printf_core
    printf6.o(i.__0vsprintf$6) refers to printf6.o(i._sputc) for _sputc
    printf6.o(i._printf_core) refers to printf1.o(i.__ARM_common_call_via_r2) for __ARM_common_call_via_r2
    printf6.o(i._printf_core) refers to printf6.o(i._printf_pre_padding) for _printf_pre_padding
    printf6.o(i._printf_core) refers to printf6.o(i._printf_post_padding) for _printf_post_padding
    printf6.o(i._printf_core) refers to uidiv.o(.text) for __aeabi_uidivmod
    printf6.o(i._printf_post_padding) refers to printfb.o(i.__ARM_common_call_via_r6) for __ARM_common_call_via_r6
    printf6.o(i._printf_pre_padding) refers to printfb.o(i.__ARM_common_call_via_r6) for __ARM_common_call_via_r6
    printf7.o(i.__0fprintf$7) refers to printf7.o(i._printf_core) for _printf_core
    printf7.o(i.__0fprintf$7) refers to fputc.o(i.fputc) for fputc
    printf7.o(i.__0printf$7) refers to printf7.o(i._printf_core) for _printf_core
    printf7.o(i.__0printf$7) refers to fputc.o(i.fputc) for fputc
    printf7.o(i.__0printf$7) refers to stdout.o(.data) for __stdout
    printf7.o(i.__0snprintf$7) refers to printf7.o(i._printf_core) for _printf_core
    printf7.o(i.__0snprintf$7) refers to printf7.o(i._snputc) for _snputc
    printf7.o(i.__0sprintf$7) refers to printf7.o(i._printf_core) for _printf_core
    printf7.o(i.__0sprintf$7) refers to printf7.o(i._sputc) for _sputc
    printf7.o(i.__0vfprintf$7) refers to printf7.o(i._printf_core) for _printf_core
    printf7.o(i.__0vfprintf$7) refers to fputc.o(i.fputc) for fputc
    printf7.o(i.__0vprintf$7) refers to printf7.o(i._printf_core) for _printf_core
    printf7.o(i.__0vprintf$7) refers to fputc.o(i.fputc) for fputc
    printf7.o(i.__0vprintf$7) refers to stdout.o(.data) for __stdout
    printf7.o(i.__0vsnprintf$7) refers to printf7.o(i._printf_core) for _printf_core
    printf7.o(i.__0vsnprintf$7) refers to printf7.o(i._snputc) for _snputc
    printf7.o(i.__0vsprintf$7) refers to printf7.o(i._printf_core) for _printf_core
    printf7.o(i.__0vsprintf$7) refers to printf7.o(i._sputc) for _sputc
    printf7.o(i._printf_core) refers to printf1.o(i.__ARM_common_call_via_r2) for __ARM_common_call_via_r2
    printf7.o(i._printf_core) refers to printf7.o(i._printf_pre_padding) for _printf_pre_padding
    printf7.o(i._printf_core) refers to printf7.o(i._printf_post_padding) for _printf_post_padding
    printf7.o(i._printf_core) refers to uldiv.o(.text) for __aeabi_uldivmod
    printf7.o(i._printf_post_padding) refers to printfb.o(i.__ARM_common_call_via_r6) for __ARM_common_call_via_r6
    printf7.o(i._printf_pre_padding) refers to printfb.o(i.__ARM_common_call_via_r6) for __ARM_common_call_via_r6
    printf8.o(i.__0fprintf$8) refers to printf8.o(i._printf_core) for _printf_core
    printf8.o(i.__0fprintf$8) refers to fputc.o(i.fputc) for fputc
    printf8.o(i.__0printf$8) refers to printf8.o(i._printf_core) for _printf_core
    printf8.o(i.__0printf$8) refers to fputc.o(i.fputc) for fputc
    printf8.o(i.__0printf$8) refers to stdout.o(.data) for __stdout
    printf8.o(i.__0snprintf$8) refers to printf8.o(i._printf_core) for _printf_core
    printf8.o(i.__0snprintf$8) refers to printf8.o(i._snputc) for _snputc
    printf8.o(i.__0sprintf$8) refers to printf8.o(i._printf_core) for _printf_core
    printf8.o(i.__0sprintf$8) refers to printf8.o(i._sputc) for _sputc
    printf8.o(i.__0vfprintf$8) refers to printf8.o(i._printf_core) for _printf_core
    printf8.o(i.__0vfprintf$8) refers to fputc.o(i.fputc) for fputc
    printf8.o(i.__0vprintf$8) refers to printf8.o(i._printf_core) for _printf_core
    printf8.o(i.__0vprintf$8) refers to fputc.o(i.fputc) for fputc
    printf8.o(i.__0vprintf$8) refers to stdout.o(.data) for __stdout
    printf8.o(i.__0vsnprintf$8) refers to printf8.o(i._printf_core) for _printf_core
    printf8.o(i.__0vsnprintf$8) refers to printf8.o(i._snputc) for _snputc
    printf8.o(i.__0vsprintf$8) refers to printf8.o(i._printf_core) for _printf_core
    printf8.o(i.__0vsprintf$8) refers to printf8.o(i._sputc) for _sputc
    printf8.o(i._printf_core) refers to printf1.o(i.__ARM_common_call_via_r2) for __ARM_common_call_via_r2
    printf8.o(i._printf_core) refers to printf8.o(i._printf_pre_padding) for _printf_pre_padding
    printf8.o(i._printf_core) refers to printf8.o(i._printf_post_padding) for _printf_post_padding
    printf8.o(i._printf_core) refers to uldiv.o(.text) for __aeabi_uldivmod
    printf8.o(i._printf_post_padding) refers to printfb.o(i.__ARM_common_call_via_r6) for __ARM_common_call_via_r6
    printf8.o(i._printf_pre_padding) refers to printfb.o(i.__ARM_common_call_via_r6) for __ARM_common_call_via_r6
    printfa.o(i.__0fprintf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0fprintf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0fprintf) refers to fputc.o(i.fputc) for fputc
    printfa.o(i.__0printf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0printf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0printf) refers to fputc.o(i.fputc) for fputc
    printfa.o(i.__0printf) refers to stdout.o(.data) for __stdout
    printfa.o(i.__0snprintf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0snprintf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0snprintf) refers to printfa.o(i._snputc) for _snputc
    printfa.o(i.__0sprintf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0sprintf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0sprintf) refers to printfa.o(i._sputc) for _sputc
    printfa.o(i.__0vfprintf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0vfprintf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0vfprintf) refers to fputc.o(i.fputc) for fputc
    printfa.o(i.__0vprintf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0vprintf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0vprintf) refers to fputc.o(i.fputc) for fputc
    printfa.o(i.__0vprintf) refers to stdout.o(.data) for __stdout
    printfa.o(i.__0vsnprintf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0vsnprintf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0vsnprintf) refers to printfa.o(i._snputc) for _snputc
    printfa.o(i.__0vsprintf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0vsprintf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0vsprintf) refers to printfa.o(i._sputc) for _sputc
    printfa.o(i._fp_digits) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i._fp_digits) refers to dmul.o(.text) for __aeabi_dmul
    printfa.o(i._fp_digits) refers to ddiv.o(.text) for __aeabi_ddiv
    printfa.o(i._fp_digits) refers to cdrcmple.o(.text) for __aeabi_cdrcmple
    printfa.o(i._fp_digits) refers to dadd.o(.text) for __aeabi_dadd
    printfa.o(i._fp_digits) refers to dfixul.o(.text) for __aeabi_d2ulz
    printfa.o(i._fp_digits) refers to uldiv.o(.text) for __aeabi_uldivmod
    printfa.o(i._printf_core) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i._printf_core) refers to printf1.o(i.__ARM_common_call_via_r2) for __ARM_common_call_via_r2
    printfa.o(i._printf_core) refers to printfa.o(i._printf_pre_padding) for _printf_pre_padding
    printfa.o(i._printf_core) refers to uldiv.o(.text) for __aeabi_uldivmod
    printfa.o(i._printf_core) refers to printfa.o(i._printf_post_padding) for _printf_post_padding
    printfa.o(i._printf_core) refers to printfa.o(i._fp_digits) for _fp_digits
    printfa.o(i._printf_core) refers to uidiv.o(.text) for __aeabi_uidivmod
    printfa.o(i._printf_post_padding) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i._printf_post_padding) refers to printfb.o(i.__ARM_common_call_via_r6) for __ARM_common_call_via_r6
    printfa.o(i._printf_pre_padding) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i._printf_pre_padding) refers to printfb.o(i.__ARM_common_call_via_r6) for __ARM_common_call_via_r6
    printfa.o(i._snputc) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i._sputc) refers (Special) to iusefp.o(.text) for __I$use$fp
    entry2.o(.ARM.Collect$$$$00000001) refers to entry2.o(.ARM.Collect$$$$00002712) for __lit__00000000
    entry2.o(.ARM.Collect$$$$00002712) refers to startup.o(STACK) for __initial_sp
    entry5.o(.ARM.Collect$$$$00000004) refers to init.o(.text) for __scatterload
    entry9a.o(.ARM.Collect$$$$0000000B) refers to assignment2.o(i.main) for main
    entry9b.o(.ARM.Collect$$$$0000000C) refers to assignment2.o(i.main) for main
    fputc.o(i.fputc) refers (Special) to iusesemip.o(.text) for __I$use$semihosting$fputc
    fputc.o(i.fputc) refers (Special) to semi.o(.text) for __semihosting_library_function
    uldiv.o(.text) refers to llushr.o(.text) for __aeabi_llsr
    uldiv.o(.text) refers to llshl.o(.text) for __aeabi_llsl
    dadd.o(.text) refers to llshl.o(.text) for __aeabi_llsl
    dadd.o(.text) refers to llsshr.o(.text) for __aeabi_lasr
    dadd.o(.text) refers to depilogue.o(.text) for _double_epilogue
    dmul.o(.text) refers to depilogue.o(.text) for _double_epilogue
    ddiv.o(.text) refers to depilogue.o(.text) for _double_round
    dfixul.o(.text) refers to llushr.o(.text) for __aeabi_llsr
    dfixul.o(.text) refers to llshl.o(.text) for __aeabi_llsl
    init.o(.text) refers to init.o(i.__ARM_common_call_via_r3) for __ARM_common_call_via_r3
    init.o(.text) refers to entry5.o(.ARM.Collect$$$$00000004) for __main_after_scatterload
    depilogue.o(.text) refers to depilogue.o(i.__ARM_clz) for __ARM_clz
    depilogue.o(.text) refers to llshl.o(.text) for __aeabi_llsl
    depilogue.o(.text) refers to llushr.o(.text) for __aeabi_llsr


==============================================================================

Removing Unused input sections from the image.

    Removing startup.o(HEAP), (0 bytes).
    Removing assignment2.o(i.adc), (236 bytes).
    Removing assignment2.o(i.buzzer), (92 bytes).
    Removing assignment2.o(i.getAlphaCode), (256 bytes).
    Removing assignment2.o(i.readLDR), (92 bytes).
    Removing assignment2.o(i.readTemp), (92 bytes).
    Removing assignment2.o(i.runDCMotor), (164 bytes).
    Removing assignment2.o(i.serialPrint), (116 bytes).
    Removing assignment2.o(i.seven_seg), (280 bytes).
    Removing dadd.o(.text), (360 bytes).
    Removing dmul.o(.text), (212 bytes).
    Removing ddiv.o(.text), (244 bytes).
    Removing dfixul.o(.text), (68 bytes).
    Removing cdrcmple.o(.text), (40 bytes).
    Removing depilogue.o(.text), (196 bytes).
    Removing depilogue.o(i.__ARM_clz), (46 bytes).

16 unused section(s) (total 2494 bytes) removed from the image.

==============================================================================

Adding Veneers to the image

    Adding AT veneer (8 bytes, Inline) for call to 'strcmp' from assignment2.o(i.main).
    Adding AT veneer (8 bytes, Inline) for call to '__scatterload' from entry5.o(.ARM.Collect$$$$00000004).
    Adding TA veneer (8 bytes, Short) for call to '__main_after_scatterload' from init.o(.text).
    Adding AT veneer (8 bytes, Inline) for call to '__2sprintf' from assignment2.o(i.main).

4 Veneer(s) (total 32 bytes) added to the image.

==============================================================================

Image Symbol Table

    Local Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    RESET                                    0x00000000   Section      264  startup.o(RESET)
    ../clib/microlib/division.c              0x00000000   Number         0  uldiv.o ABSOLUTE
    ../clib/microlib/division.c              0x00000000   Number         0  uidiv.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry11b.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry11a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry10b.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry10a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry9b.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry8a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry5.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry7a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry9a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry7b.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry8b.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry2.o ABSOLUTE
    ../clib/microlib/longlong.c              0x00000000   Number         0  llsshr.o ABSOLUTE
    ../clib/microlib/longlong.c              0x00000000   Number         0  llushr.o ABSOLUTE
    ../clib/microlib/longlong.c              0x00000000   Number         0  llshl.o ABSOLUTE
    ../clib/microlib/printf/printf.c         0x00000000   Number         0  printf7.o ABSOLUTE
    ../clib/microlib/printf/printf.c         0x00000000   Number         0  printfb.o ABSOLUTE
    ../clib/microlib/printf/printf.c         0x00000000   Number         0  printfa.o ABSOLUTE
    ../clib/microlib/printf/printf.c         0x00000000   Number         0  printf0.o ABSOLUTE
    ../clib/microlib/printf/printf.c         0x00000000   Number         0  printf1.o ABSOLUTE
    ../clib/microlib/printf/printf.c         0x00000000   Number         0  printf8.o ABSOLUTE
    ../clib/microlib/printf/printf.c         0x00000000   Number         0  printf2.o ABSOLUTE
    ../clib/microlib/printf/printf.c         0x00000000   Number         0  printf3.o ABSOLUTE
    ../clib/microlib/printf/printf.c         0x00000000   Number         0  printf4.o ABSOLUTE
    ../clib/microlib/printf/printf.c         0x00000000   Number         0  printf5.o ABSOLUTE
    ../clib/microlib/printf/printf.c         0x00000000   Number         0  printf6.o ABSOLUTE
    ../clib/microlib/printf/stubs.s          0x00000000   Number         0  stubs.o ABSOLUTE
    ../clib/microlib/stdio/fputc.c           0x00000000   Number         0  fputc.o ABSOLUTE
    ../clib/microlib/stdio/semi.s            0x00000000   Number         0  semi.o ABSOLUTE
    ../clib/microlib/stdio/streams.c         0x00000000   Number         0  stdout.o ABSOLUTE
    ../clib/microlib/string/strcmp.c         0x00000000   Number         0  strcmp.o ABSOLUTE
    ../clib/microlib/stubs.s                 0x00000000   Number         0  iusefp.o ABSOLUTE
    ../clib/microlib/stubs.s                 0x00000000   Number         0  iusesemip.o ABSOLUTE
    ../fplib/microlib/fpadd.c                0x00000000   Number         0  dadd.o ABSOLUTE
    ../fplib/microlib/fpdiv.c                0x00000000   Number         0  ddiv.o ABSOLUTE
    ../fplib/microlib/fpepilogue.c           0x00000000   Number         0  depilogue.o ABSOLUTE
    ../fplib/microlib/fpfix.c                0x00000000   Number         0  dfixul.o ABSOLUTE
    ../fplib/microlib/fpmul.c                0x00000000   Number         0  dmul.o ABSOLUTE
    LCD.c                                    0x00000000   Number         0  lcd.o ABSOLUTE
    Startup.s                                0x00000000   Number         0  startup.o ABSOLUTE
    assignment2.c                            0x00000000   Number         0  assignment2.o ABSOLUTE
    cdrcmple.s                               0x00000000   Number         0  cdrcmple.o ABSOLUTE
    dc.s                                     0x00000000   Number         0  dc.o ABSOLUTE
    handlers.s                               0x00000000   Number         0  handlers.o ABSOLUTE
    init.s                                   0x00000000   Number         0  init.o ABSOLUTE
    Undef_Handler                            0x00000040   ARM Code       4  startup.o(RESET)
    SWI_Handler                              0x00000044   ARM Code       4  startup.o(RESET)
    PAbt_Handler                             0x00000048   ARM Code       4  startup.o(RESET)
    DAbt_Handler                             0x0000004c   ARM Code       4  startup.o(RESET)
    IRQ_Handler                              0x00000050   ARM Code       4  startup.o(RESET)
    FIQ_Handler                              0x00000054   ARM Code       4  startup.o(RESET)
    .ARM.Collect$$$$00000000                 0x00000108   Section        0  entry.o(.ARM.Collect$$$$00000000)
    .ARM.Collect$$$$00000001                 0x00000108   Section        4  entry2.o(.ARM.Collect$$$$00000001)
    .ARM.Collect$$$$00000004                 0x0000010c   Section        4  entry5.o(.ARM.Collect$$$$00000004)
    .ARM.Collect$$$$00000008                 0x00000110   Section        0  entry7b.o(.ARM.Collect$$$$00000008)
    .ARM.Collect$$$$0000000A                 0x00000110   Section        0  entry8b.o(.ARM.Collect$$$$0000000A)
    .ARM.Collect$$$$0000000B                 0x00000110   Section       12  entry9a.o(.ARM.Collect$$$$0000000B)
    .ARM.Collect$$$$0000000D                 0x0000011c   Section        0  entry10a.o(.ARM.Collect$$$$0000000D)
    .ARM.Collect$$$$0000000F                 0x0000011c   Section        0  entry11a.o(.ARM.Collect$$$$0000000F)
    .ARM.Collect$$$$00002712                 0x0000011c   Section        4  entry2.o(.ARM.Collect$$$$00002712)
    __lit__00000000                          0x0000011c   Data           4  entry2.o(.ARM.Collect$$$$00002712)
    .text                                    0x00000120   Section        0  uidiv.o(.text)
    .text                                    0x00000158   Section        0  strcmp.o(.text)
    .text                                    0x00000184   Section       32  init.o(.text)
    i.LCD_CmdWrite                           0x000001ac   Section        0  lcd.o(i.LCD_CmdWrite)
    i.LCD_DataWrite                          0x000001dc   Section        0  lcd.o(i.LCD_DataWrite)
    i.LCD_DisplayString                      0x0000020c   Section        0  lcd.o(i.LCD_DisplayString)
    i.LCD_Init                               0x00000234   Section        0  lcd.o(i.LCD_Init)
    i.LCD_Reset                              0x0000026c   Section        0  lcd.o(i.LCD_Reset)
    i.LCD_SendCmdSignals                     0x000002c8   Section        0  lcd.o(i.LCD_SendCmdSignals)
    i.LCD_SendDataSignals                    0x00000300   Section        0  lcd.o(i.LCD_SendDataSignals)
    i.LCD_SendHigherNibble                   0x00000338   Section        0  lcd.o(i.LCD_SendHigherNibble)
    i.RTC_GetDateTime                        0x0000035c   Section        0  assignment2.o(i.RTC_GetDateTime)
    i.RTC_Init                               0x000003b8   Section        0  assignment2.o(i.RTC_Init)
    i.RTC_SetDateTime                        0x000003cc   Section        0  assignment2.o(i.RTC_SetDateTime)
    i.SystemInit                             0x00000410   Section        0  assignment2.o(i.SystemInit)
    i.Timer1_ISR                             0x00000478   Section        0  assignment2.o(i.Timer1_ISR)
    i.__0sprintf$6                           0x000004ec   Section        0  printf6.o(i.__0sprintf$6)
    i.__ARM_common_call_via_r2               0x00000514   Section        0  printf1.o(i.__ARM_common_call_via_r2)
    i.__ARM_common_call_via_r3               0x00000516   Section        2  init.o(i.__ARM_common_call_via_r3)
    i.__ARM_common_call_via_r6               0x00000518   Section        0  printfb.o(i.__ARM_common_call_via_r6)
    i.__scatterload_copy                     0x0000051c   Section       28  handlers.o(i.__scatterload_copy)
    i.__scatterload_null                     0x00000538   Section        4  handlers.o(i.__scatterload_null)
    i.__scatterload_zeroinit                 0x0000053c   Section       24  handlers.o(i.__scatterload_zeroinit)
    i._printf_core                           0x00000554   Section        0  printf6.o(i._printf_core)
    _printf_core                             0x00000555   Thumb Code   792  printf6.o(i._printf_core)
    i._printf_post_padding                   0x00000870   Section        0  printf6.o(i._printf_post_padding)
    _printf_post_padding                     0x00000871   Thumb Code    38  printf6.o(i._printf_post_padding)
    i._printf_pre_padding                    0x00000896   Section        0  printf6.o(i._printf_pre_padding)
    _printf_pre_padding                      0x00000897   Thumb Code    50  printf6.o(i._printf_pre_padding)
    i._sputc                                 0x000008c8   Section        0  printf6.o(i._sputc)
    _sputc                                   0x000008c9   Thumb Code    10  printf6.o(i._sputc)
    i.board                                  0x000008d4   Section        0  assignment2.o(i.board)
    i.delay                                  0x00000cc4   Section        0  assignment2.o(i.delay)
    i.delay_ms                               0x00000d2c   Section        0  lcd.o(i.delay_ms)
    i.delay_us                               0x00000d60   Section        0  lcd.o(i.delay_us)
    i.main                                   0x00000d94   Section        0  assignment2.o(i.main)
    i.serialPrintStr                         0x00000ef0   Section        0  assignment2.o(i.serialPrintStr)
    i.stepper_motor                          0x00000f34   Section        0  assignment2.o(i.stepper_motor)
    i.timer1_Init                            0x00001114   Section        0  assignment2.o(i.timer1_Init)
    i.uart_init                              0x00001170   Section        0  assignment2.o(i.uart_init)
    .data                                    0x40000000   Section       26  assignment2.o(.data)
    .bss                                     0x4000001c   Section       12  assignment2.o(.bss)
    STACK                                    0x40000028   Section     1160  startup.o(STACK)
    Stack_Top                                0x400004b0   Data           0  startup.o(STACK)

    Global Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    BuildAttributes$$THM_ISAv1$ARM_ISAv4$S$PE$A:L22$X:L11$S22$IEEE1$IW$USESV6$~STKCKD$USESV7$~SHL$OSPACE$ROPI$EBA8$MICROLIB$REQ8$PRES8$EABIv2 0x00000000   Number         0  anon$$obj.o ABSOLUTE
    __ARM_use_no_argv                        0x00000000   Number         0  assignment2.o ABSOLUTE
    _printf_a                                0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_c                                0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_charcount                        0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_d                                0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_e                                0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_f                                0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_flags                            0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_fp_dec                           0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_fp_hex                           0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_g                                0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_i                                0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_int_dec                          0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_l                                0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_lc                               0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_ll                               0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_lld                              0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_lli                              0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_llo                              0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_llu                              0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_llx                              0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_longlong_dec                     0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_longlong_hex                     0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_longlong_oct                     0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_ls                               0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_mbtowc                           0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_n                                0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_o                                0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_p                                0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_percent                          0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_pre_padding                      0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_return_value                     0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_s                                0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_sizespec                         0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_str                              0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_truncate_signed                  0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_truncate_unsigned                0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_u                                0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_wc                               0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_wctomb                           0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_widthprec                        0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_x                                0x00000000   Number         0  stubs.o ABSOLUTE
    __cpp_initialize__aeabi_                  - Undefined Weak Reference
    __cxa_finalize                            - Undefined Weak Reference
    __decompress                              - Undefined Weak Reference
    _clock_init                               - Undefined Weak Reference
    _microlib_exit                            - Undefined Weak Reference
    Reset_Handler                            0x00000058   ARM Code       0  startup.o(RESET)
    __main                                   0x00000108   ARM Code       0  entry.o(.ARM.Collect$$$$00000000)
    _main_stk                                0x00000108   ARM Code       0  entry2.o(.ARM.Collect$$$$00000001)
    _main_scatterload                        0x0000010c   ARM Code       0  entry5.o(.ARM.Collect$$$$00000004)
    __main_after_scatterload                 0x00000110   ARM Code       0  entry5.o(.ARM.Collect$$$$00000004)
    _main_clock                              0x00000110   ARM Code       0  entry7b.o(.ARM.Collect$$$$00000008)
    _main_cpp_init                           0x00000110   ARM Code       0  entry8b.o(.ARM.Collect$$$$0000000A)
    _main_init                               0x00000110   ARM Code       0  entry9a.o(.ARM.Collect$$$$0000000B)
    __rt_final_cpp                           0x0000011c   ARM Code       0  entry10a.o(.ARM.Collect$$$$0000000D)
    __rt_final_exit                          0x0000011c   ARM Code       0  entry11a.o(.ARM.Collect$$$$0000000F)
    __aeabi_uidiv                            0x00000121   Thumb Code     0  uidiv.o(.text)
    __aeabi_uidivmod                         0x00000121   Thumb Code    46  uidiv.o(.text)
    Inline ARM to Thumb Veneer to strcmp     0x00000150   ARM Code       8  strcmp.o(.text)
    strcmp                                   0x00000159   Thumb Code    34  strcmp.o(.text)
    Inline ARM to Thumb Veneer to __scatterload 0x0000017c   ARM Code       8  init.o(.text)
    __scatterload                            0x00000185   Thumb Code    24  init.o(.text)
    __scatterload_rt2                        0x00000185   Thumb Code     0  init.o(.text)
    Short Thumb to ARM Veneer to __main_after_scatterload 0x000001a5   Thumb Code     8  anon$$obj.o(Veneer$$Code)
    LCD_CmdWrite                             0x000001ac   ARM Code      48  lcd.o(i.LCD_CmdWrite)
    LCD_DataWrite                            0x000001dc   ARM Code      48  lcd.o(i.LCD_DataWrite)
    LCD_DisplayString                        0x0000020c   ARM Code      40  lcd.o(i.LCD_DisplayString)
    LCD_Init                                 0x00000234   ARM Code      56  lcd.o(i.LCD_Init)
    LCD_Reset                                0x0000026c   ARM Code      92  lcd.o(i.LCD_Reset)
    LCD_SendCmdSignals                       0x000002c8   ARM Code      52  lcd.o(i.LCD_SendCmdSignals)
    LCD_SendDataSignals                      0x00000300   ARM Code      52  lcd.o(i.LCD_SendDataSignals)
    LCD_SendHigherNibble                     0x00000338   ARM Code      32  lcd.o(i.LCD_SendHigherNibble)
    RTC_GetDateTime                          0x0000035c   ARM Code      88  assignment2.o(i.RTC_GetDateTime)
    RTC_Init                                 0x000003b8   ARM Code      16  assignment2.o(i.RTC_Init)
    RTC_SetDateTime                          0x000003cc   ARM Code      64  assignment2.o(i.RTC_SetDateTime)
    SystemInit                               0x00000410   ARM Code     100  assignment2.o(i.SystemInit)
    Timer1_ISR                               0x00000478   ARM Code      96  assignment2.o(i.Timer1_ISR)
    Inline ARM to Thumb Veneer to __2sprintf 0x000004e4   ARM Code       8  printf6.o(i.__0sprintf$6)
    __0sprintf$6                             0x000004ed   Thumb Code    36  printf6.o(i.__0sprintf$6)
    __1sprintf$6                             0x000004ed   Thumb Code     0  printf6.o(i.__0sprintf$6)
    __2sprintf                               0x000004ed   Thumb Code     0  printf6.o(i.__0sprintf$6)
    __ARM_common_call_via_r2                 0x00000515   Thumb Code     2  printf1.o(i.__ARM_common_call_via_r2)
    __ARM_common_call_via_r3                 0x00000517   Thumb Code     2  init.o(i.__ARM_common_call_via_r3)
    __ARM_common_call_via_r6                 0x00000519   Thumb Code     2  printfb.o(i.__ARM_common_call_via_r6)
    __scatterload_copy                       0x0000051c   ARM Code      28  handlers.o(i.__scatterload_copy)
    __scatterload_null                       0x00000538   ARM Code       4  handlers.o(i.__scatterload_null)
    __scatterload_zeroinit                   0x0000053c   ARM Code      24  handlers.o(i.__scatterload_zeroinit)
    board                                    0x000008d4   ARM Code     988  assignment2.o(i.board)
    delay                                    0x00000cc4   ARM Code     100  assignment2.o(i.delay)
    delay_ms                                 0x00000d2c   ARM Code      48  lcd.o(i.delay_ms)
    delay_us                                 0x00000d60   ARM Code      52  lcd.o(i.delay_us)
    main                                     0x00000d94   ARM Code     284  assignment2.o(i.main)
    serialPrintStr                           0x00000ef0   ARM Code      64  assignment2.o(i.serialPrintStr)
    stepper_motor                            0x00000f34   ARM Code     476  assignment2.o(i.stepper_motor)
    timer1_Init                              0x00001114   ARM Code      80  assignment2.o(i.timer1_Init)
    uart_init                                0x00001170   ARM Code      68  assignment2.o(i.uart_init)
    Region$$Table$$Base                      0x000011b8   Number         0  anon$$obj.o(Region$$Table)
    Region$$Table$$Limit                     0x000011d8   Number         0  anon$$obj.o(Region$$Table)
    x                                        0x40000000   Data           4  assignment2.o(.data)
    count                                    0x40000004   Data           4  assignment2.o(.data)
    lookup_table                             0x40000008   Data          16  assignment2.o(.data)
    rowsel                                   0x40000018   Data           1  assignment2.o(.data)
    colsel                                   0x40000019   Data           1  assignment2.o(.data)
    rtc                                      0x4000001c   Data          12  assignment2.o(.bss)
    __initial_sp                             0x40000428   Data         136  startup.o(STACK)



==============================================================================

Memory Map of the image

  Image Entry point : 0x00000108

  Load Region LR_IROM1 (Base: 0x00000000, Size: 0x000011f4, Max: 0x00080000, ABSOLUTE)

    Execution Region ER_IROM1 (Exec base: 0x00000000, Load base: 0x00000000, Size: 0x000011d8, Max: 0x00080000, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x00000000   0x00000000   0x00000108   Code   RO            3    RESET               startup.o
    0x00000108   0x00000108   0x00000000   Code   RO          221  * .ARM.Collect$$$$00000000  mc_t.l(entry.o)
    0x00000108   0x00000108   0x00000004   Code   RO          493    .ARM.Collect$$$$00000001  mc_t.l(entry2.o)
    0x0000010c   0x0000010c   0x00000004   Code   RO          495    .ARM.Collect$$$$00000004  mc_t.l(entry5.o)
    0x00000110   0x00000110   0x00000000   Code   RO          497    .ARM.Collect$$$$00000008  mc_t.l(entry7b.o)
    0x00000110   0x00000110   0x00000000   Code   RO          499    .ARM.Collect$$$$0000000A  mc_t.l(entry8b.o)
    0x00000110   0x00000110   0x0000000c   Code   RO          500    .ARM.Collect$$$$0000000B  mc_t.l(entry9a.o)
    0x0000011c   0x0000011c   0x00000000   Code   RO          502    .ARM.Collect$$$$0000000D  mc_t.l(entry10a.o)
    0x0000011c   0x0000011c   0x00000000   Code   RO          504    .ARM.Collect$$$$0000000F  mc_t.l(entry11a.o)
    0x0000011c   0x0000011c   0x00000004   Code   RO          494    .ARM.Collect$$$$00002712  mc_t.l(entry2.o)
    0x00000120   0x00000120   0x0000002e   Code   RO          224    .text               mc_t.l(uidiv.o)
    0x0000014e   0x0000014e   0x00000002   PAD
    0x00000150   0x00000150   0x00000008   Ven    RO          226    .text               mc_t.l(strcmp.o)
    0x00000158   0x00000158   0x00000022   Code   RO          226    .text               mc_t.l(strcmp.o)
    0x0000017a   0x0000017a   0x00000002   PAD
    0x0000017c   0x0000017c   0x00000008   Ven    RO          522    .text               mc_t.l(init.o)
    0x00000184   0x00000184   0x00000020   Code   RO          522    .text               mc_t.l(init.o)
    0x000001a4   0x000001a4   0x00000008   Ven    RO          549    Veneer$$Code        anon$$obj.o
    0x000001ac   0x000001ac   0x00000030   Code   RO          155    i.LCD_CmdWrite      lcd.o
    0x000001dc   0x000001dc   0x00000030   Code   RO          156    i.LCD_DataWrite     lcd.o
    0x0000020c   0x0000020c   0x00000028   Code   RO          157    i.LCD_DisplayString  lcd.o
    0x00000234   0x00000234   0x00000038   Code   RO          158    i.LCD_Init          lcd.o
    0x0000026c   0x0000026c   0x0000005c   Code   RO          159    i.LCD_Reset         lcd.o
    0x000002c8   0x000002c8   0x00000038   Code   RO          160    i.LCD_SendCmdSignals  lcd.o
    0x00000300   0x00000300   0x00000038   Code   RO          161    i.LCD_SendDataSignals  lcd.o
    0x00000338   0x00000338   0x00000024   Code   RO          162    i.LCD_SendHigherNibble  lcd.o
    0x0000035c   0x0000035c   0x0000005c   Code   RO            8    i.RTC_GetDateTime   assignment2.o
    0x000003b8   0x000003b8   0x00000014   Code   RO            9    i.RTC_Init          assignment2.o
    0x000003cc   0x000003cc   0x00000044   Code   RO           10    i.RTC_SetDateTime   assignment2.o
    0x00000410   0x00000410   0x00000068   Code   RO           11    i.SystemInit        assignment2.o
    0x00000478   0x00000478   0x0000006c   Code   RO           12    i.Timer1_ISR        assignment2.o
    0x000004e4   0x000004e4   0x00000008   Ven    RO          389    i.__0sprintf$6      mc_t.l(printf6.o)
    0x000004ec   0x000004ec   0x00000028   Code   RO          389    i.__0sprintf$6      mc_t.l(printf6.o)
    0x00000514   0x00000514   0x00000002   Code   RO          296    i.__ARM_common_call_via_r2  mc_t.l(printf1.o)
    0x00000516   0x00000516   0x00000002   Code   RO          524    i.__ARM_common_call_via_r3  mc_t.l(init.o)
    0x00000518   0x00000518   0x00000002   Code   RO          250    i.__ARM_common_call_via_r6  mc_t.l(printfb.o)
    0x0000051a   0x0000051a   0x00000002   PAD
    0x0000051c   0x0000051c   0x0000001c   Code   RO          540    i.__scatterload_copy  mc_t.l(handlers.o)
    0x00000538   0x00000538   0x00000004   Code   RO          541    i.__scatterload_null  mc_t.l(handlers.o)
    0x0000053c   0x0000053c   0x00000018   Code   RO          542    i.__scatterload_zeroinit  mc_t.l(handlers.o)
    0x00000554   0x00000554   0x0000031c   Code   RO          394    i._printf_core      mc_t.l(printf6.o)
    0x00000870   0x00000870   0x00000026   Code   RO          395    i._printf_post_padding  mc_t.l(printf6.o)
    0x00000896   0x00000896   0x00000032   Code   RO          396    i._printf_pre_padding  mc_t.l(printf6.o)
    0x000008c8   0x000008c8   0x0000000a   Code   RO          398    i._sputc            mc_t.l(printf6.o)
    0x000008d2   0x000008d2   0x00000002   PAD
    0x000008d4   0x000008d4   0x000003f0   Code   RO           14    i.board             assignment2.o
    0x00000cc4   0x00000cc4   0x00000068   Code   RO           16    i.delay             assignment2.o
    0x00000d2c   0x00000d2c   0x00000034   Code   RO          163    i.delay_ms          lcd.o
    0x00000d60   0x00000d60   0x00000034   Code   RO          164    i.delay_us          lcd.o
    0x00000d94   0x00000d94   0x0000015c   Code   RO           18    i.main              assignment2.o
    0x00000ef0   0x00000ef0   0x00000044   Code   RO           23    i.serialPrintStr    assignment2.o
    0x00000f34   0x00000f34   0x000001e0   Code   RO           25    i.stepper_motor     assignment2.o
    0x00001114   0x00001114   0x0000005c   Code   RO           26    i.timer1_Init       assignment2.o
    0x00001170   0x00001170   0x00000048   Code   RO           27    i.uart_init         assignment2.o
    0x000011b8   0x000011b8   0x00000020   Data   RO          538    Region$$Table       anon$$obj.o


    Execution Region RW_IRAM1 (Exec base: 0x40000000, Load base: 0x000011d8, Size: 0x000004b0, Max: 0x00008000, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x40000000   0x000011d8   0x0000001a   Data   RW           29    .data               assignment2.o
    0x4000001a   0x000011f2   0x00000002   PAD
    0x4000001c        -       0x0000000c   Zero   RW           28    .bss                assignment2.o
    0x40000028        -       0x00000488   Zero   RW            1    STACK               startup.o


==============================================================================

Image component sizes


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Object Name

      2564        140          0         26         12       8900   assignment2.o
       536         16          0          0          0       4410   lcd.o
       264         48          0          0       1160        304   startup.o

    ----------------------------------------------------------------------
      3372        204         32         28       1172      13614   Object Totals
         8          0         32          0          0          0   (incl. Generated)
         0          0          0          2          0          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Member Name

         0          0          0          0          0          0   entry.o
         0          0          0          0          0          0   entry10a.o
         0          0          0          0          0          0   entry11a.o
         8          4          0          0          0          0   entry2.o
         4          0          0          0          0          0   entry5.o
         0          0          0          0          0          0   entry7b.o
         0          0          0          0          0          0   entry8b.o
        12          4          0          0          0          0   entry9a.o
        56          0          0          0          0          0   handlers.o
        42          8          0          0          0        136   init.o
         2          0          0          0          0         60   printf1.o
       942          8          0          0          0        420   printf6.o
         2          0          0          0          0         60   printfb.o
        42          0          0          0          0         72   strcmp.o
        46          0          0          0          0         72   uidiv.o

    ----------------------------------------------------------------------
      1164         24          0          0          0        820   Library Totals
         8          0          0          0          0          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Name

      1156         24          0          0          0        820   mc_t.l

    ----------------------------------------------------------------------
      1164         24          0          0          0        820   Library Totals

    ----------------------------------------------------------------------

==============================================================================


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   

      4536        228         32         28       1172      13342   Grand Totals
      4536        228         32         28       1172      13342   ELF Image Totals
      4536        228         32         28          0          0   ROM Totals

==============================================================================

    Total RO  Size (Code + RO Data)                 4568 (   4.46kB)
    Total RW  Size (RW Data + ZI Data)              1200 (   1.17kB)
    Total ROM Size (Code + RO Data + RW Data)       4596 (   4.49kB)

==============================================================================

